{"posts":[{"title":"小草bot帮助文档","text":"小草bot的帮助文档 mai功能 以及神秘功能 1234/草绑 &lt;你的uid&gt; //用于绑定你的mai账号/草飞 &lt;倍数&gt; //获取神秘物品/草润 &lt;时间戳&gt; //用于自行脱离小黑屋/我要自闭15分钟 //字面意思（ 随机图片 目前可用的关键词如下 1234kagura来点峰哥来点小红grass OI竞赛有关功能 12cf //获取最近三场codeforces比赛nc //获取最近三场牛客比赛 杂项 1 To Do [ ]mai服务器状态查询 [ ]牢dust电脑开着吗（ [ ]…","link":"/2024/10/15/GrassBot%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/"},{"title":"P1226 【模板】快速幂","text":"比较简单，但是难理解，所以写篇题解 作为模板题，本该是秒切，但是还是花了较长时间才AC，还是题刷少了（咕咕咕） 废话不多说，直接上题 题面 题目描述 给你三个整数 a,b,pa,b,pa,b,p，求 ab mod pa^b \\bmod pabmodp。 输入格式 输入只有一行三个整数，分别代表 a,b,pa,b,pa,b,p。 输出格式 输出一行一个字符串 a^b mod p=s，其中 a,b,pa,b,pa,b,p 分别为题目给定的值， sss 为运算结果。 样例 #1 样例输入 #1 12 10 9 样例输出 #1 12^10 mod 9=7 提示 样例解释 210=10242^{10} = 1024210=1024，1024 mod 9=71024 \\bmod 9 = 71024mod9=7。 数据规模与约定 对于 100%100\\%100% 的数据，保证 0≤a,b&lt;2310\\le a,b &lt; 2^{31}0≤a,b&lt;231，a+b&gt;0a+b&gt;0a+b&gt;0，2≤p&lt;2312 \\leq p \\lt 2^{31}2≤p&lt;231。 首先把题上形式列出 ab=ac1∗20∗ac2∗21∗ac3∗22∗...∗acn∗2na^b=a^{c_1*2^0}*a^{c_2*2^1}*a^{c_3*2^2}*...*a^{c_n*2^n}ab=ac1​∗20∗ac2​∗21∗ac3​∗22∗...∗acn​∗2n 即 ab=ac1∗20+c2∗21+c3∗22+...+cn∗2na^b=a^{c_1*2^0+c_2*2^1+c_3*2^2+...+c_n*2^n}ab=ac1​∗20+c2​∗21+c3​∗22+...+cn​∗2n 是不是一头雾水awa 是就对了，因为我当时看各个题解的时候也是一样的orz 那么，我们怎么快速求出这个式子呢 首先把上面的式子扔一边，拿出我们的二进制 比如，设 a=11a=11a=11，那它的二进制就表示为101110111011 也表示为 a=11=23+21+20a=11=2^3+2^1+2^0a=11=23+21+20 快速幂中也存在类似的形式 再回头看看刚刚的那个式子，你有没有发现了什么地方形式是相似的 ab=ac1∗20+c2∗21+c3∗22+...+cn∗2na^b=a^{c_1*2^0+c_2*2^1+c_3*2^2+...+c_n*2^n}ab=ac1​∗20+c2​∗21+c3​∗22+...+cn​∗2n 还看不出来？emm qwq，那再看看这个（为方便理解暂时删去了常数c） 15=20+21+22+2315={2^0+2^1+2^2+2^3}15=20+21+22+23 b=20+21+22+...+2nb={2^0+2^1+2^2+...+2^n}b=20+21+22+...+2n 有点头绪了吧，那让我们来解决它 上面的式子可以化成 b=c1∗20+c2∗21+c3∗22+...+cn∗2nb={c_1*2^0+c_2*2^1+c_3*2^2+...+c_n*2^n}b=c1​∗20+c2​∗21+c3​∗22+...+cn​∗2n 其中的c为常数，1代表这一位存在 由上面我们对二进制形式的分析，我们可以发现，aba^bab的指数b可以用二进制表示 然后，再由 a=a∗aa=a*a a=a∗a a2=a∗aa^2=a*a a2=a∗a a4=a2∗a2a^4=a^2*a^2 a4=a2∗a2 a8=a4∗a4a^8=a^4*a^4 a8=a4∗a4 a16=a8∗a8a^{16}=a^8*a^8 a16=a8∗a8 ...... ... a2n+1=a2n∗a2na^{2^{n+1}}=a^{2^n}*a^{2^n} a2n+1=a2n∗a2n 欸！是不是就对上啦！ 我们暂时先将取模放在一边，先将代码写出来，后面再加入 1234567891011121314151617181920#include &lt;bits/stdc++.h&gt;#define int long longusing namespace std;int fastpow_mod(int base,int level){ int bs = base;//1 int ans = 1 ; while(level&gt;0){ if(level&amp;1){ ans = ans*bs; } bs=bs*bs; level &gt;&gt;= 1; } return ans;}signed main(){ int a,b,q; cin &gt;&gt; a &gt;&gt; b &gt;&gt; q; cout &lt;&lt; a &lt;&lt; '^' &lt;&lt; b &lt;&lt; &quot; mod &quot; &lt;&lt; q &lt;&lt; '=' &lt;&lt; fastpow_mod(a,b);} 如果对“>>=”与“&”等位运算有疑惑的可以看这里 此文只提供所需知识，如果有缺漏还请自行查阅资料 按位与运算符 1&amp;1=1 1&amp;0=0 0&amp;1=0 0&amp;0=0 右移运算符 比如11的二进制1011，在进行&gt;&gt;=1操作后，整体右移，变为101 101110111011 &gt;&gt;= 101(1)101(1)101(1)(此处1就没了) （已在代码中表明对应位置） 1.其中的bs在上文的式子中与a同位，负责在循环中作为每一位的那个aba^bab 2.ans负责在循环中作为ab1+b2+...+bna^{b_1+b_2+...+b_n}ab1​+b2​+...+bn​的累乘 3.level在上文的式子中与bbb的二进制表示同位，负责在循环中作为bbb的二进制表示，并用&amp;1判断该位是否存在 4.level &gt;&gt;= 1;负责将level整体右移一位，即判断下一位是否存在 接下来，我们加上取模 首先，我们要知道取模运算的分配律 (a+b)%c=(a%c+b%c)modc(a+b) \\% c=(a \\% c+b \\% c) mod c (a+b)%c=(a%c+b%c)modc (a−b)%c=(a%c−b%c)modc(a-b) \\% c=(a \\% c-b \\% c) mod c (a−b)%c=(a%c−b%c)modc (a∗b)%c=(a%c∗b%c)modc(a*b) \\% c=(a \\% c*b \\% c) mod c (a∗b)%c=(a%c∗b%c)modc 所以，我们可以将代码修改为 1234567891011121314151617181920#include &lt;bits/stdc++.h&gt;#define int long longusing namespace std;int fastpow_mod(int base,int level,int num_mod){ int bs = base; int ans = 1 ; while(level&gt;0){ if(level&amp;1){ ans = (ans*bs)%num_mod; } bs=((bs%num_mod)*(bs%num_mod))%num_mod; level &gt;&gt;= 1; } return ans;}signed main(){ int a,b,q; cin &gt;&gt; a &gt;&gt; b &gt;&gt; q; cout &lt;&lt; a &lt;&lt; '^' &lt;&lt; b &lt;&lt; &quot; mod &quot; &lt;&lt; q &lt;&lt; '=' &lt;&lt; fastpow_mod(a,b,q);} 到此，我们就完成了这道题。 第一次写文，若有不好还请见谅orz","link":"/2024/10/17/P1226%20%E3%80%90%E6%A8%A1%E6%9D%BF%E3%80%91%E5%BF%AB%E9%80%9F%E5%B9%82/"}],"tags":[{"name":"Grassbot","slug":"Grassbot","link":"/tags/Grassbot/"},{"name":"算法","slug":"算法","link":"/tags/%E7%AE%97%E6%B3%95/"}],"categories":[{"name":"杂项","slug":"杂项","link":"/categories/%E6%9D%82%E9%A1%B9/"},{"name":"算法刷题随笔","slug":"算法刷题随笔","link":"/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E9%9A%8F%E7%AC%94/"}],"pages":[]}